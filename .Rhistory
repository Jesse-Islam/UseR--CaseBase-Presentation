disease_names <- c("ALL" = "Acute Lymphoid Leukemia",
"AML" = "Acute Myeloid Leukemia")
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
ggsave("absolute_risk.pdf", p)
levels = c("BM+PB", "PB")))
risk_cb <- absoluteRisk(object = model_cb, time = time_points,
method = "montecarlo", newdata = newdata)
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,2,], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,3,], Disease = "AML",
stringsAsFactors = FALSE))
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
ggsave("absolute_risk.pdf", p)
# Absolute risks----
library(tidyverse)
library(magrittr)
library(splines)
library(survival)
library(timereg)
library(ggplot2)
bmtcrr %<>% filter(Age >= 16)
bmtcrr %>% select(Sex) %>% table
bmtcrr %>% select(D) %>% table
bmtcrr %>% select(Phase) %>% table
bmtcrr %>% select(Source) %>% table
bmtcrr %>% select(Status) %>% table
model_cb <- fitSmoothHazard(Status ~ bs(ftime, df = 5) + Sex + D + Phase + Source + Age,
data = bmtcrr, time = "ftime")
model_fg <- comp.risk(Event(ftime, Status) ~ const(Sex) + const(D) +
const(Phase) + const(Source) + const(Age),
data = bmtcrr, cause = 1, model = "fg")
model_cox <- coxph(Surv(ftime, Status == 1) ~ Sex + D + Phase + Source + Age,
data = bmtcrr)
time_points <- (0:100)*60/100
# ALL vs. AML
newdata <- data.frame("Sex" = factor(c("F", "F"),
levels = c("F", "M")),
"D" = c("ALL", "AML"),
"Phase" = factor(c("Relapse", "Relapse"),
levels = c("CR1", "CR2", "CR3", "Relapse")),
"Age" = c(35, 35),
"Source" = factor(c("PB", "PB"),
levels = c("BM+PB", "PB")))
risk_cb <- absoluteRisk(object = model_cb, time = time_points,
method = "montecarlo", newdata = newdata)
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,2,], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,3,], Disease = "AML",
stringsAsFactors = FALSE))
risk_fg <- predict(model_fg, newdata, times = time_points)
risk_fg <- bind_rows(data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[1,], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[2,], Disease = "AML",
stringsAsFactors = FALSE))
risk_km <- map_df(c("ALL", "AML"), function(disease) {
foo <- bmtcrr %>%
filter(D == disease) %>%
survfit(Surv(ftime,Status == 1) ~ 1, data = .)
data.frame(Time = foo$time, Method = "Kaplan-Meier", Risk = 1 - foo$surv, Disease = disease,
stringsAsFactors = FALSE) %>%
filter(Time <= 60)
})
disease_names <- c("ALL" = "Acute Lymphoid Leukemia",
"AML" = "Acute Myeloid Leukemia")
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
ggsave("absolute_risk.pdf", p)
library(casebase)
data("bmtcrr")
# Population-time plots----
nobs <- nrow(bmtcrr)
ftime <- bmtcrr$ftime
ord <- order(ftime, decreasing = FALSE)
yCoords <- cbind(cumsum(bmtcrr[ord, "Status"] == 2),
cumsum(bmtcrr[ord, "Status"] == 1),
cumsum(bmtcrr[ord, "Status"] == 0))
yCoords <- cbind(yCoords, nobs - rowSums(yCoords))
aspectRatio <- 0.75
height <- 8.5 * aspectRatio; width <- 11 * aspectRatio
# Figure 1: blank
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime1.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
dev.off()
# Figure 2: Experience
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime2.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
polygon(c(0, 0, ftime[ord], max(ftime), 0),
c(0, nobs, yCoords[,4], 0, 0),
col = "grey90")
dev.off()
cases <- bmtcrr[, "Status"] == 1
comps <- bmtcrr[, "Status"] == 2
# randomly move the cases vertically
moved_cases <- yCoords[cases[ord], 4] * runif(sum(cases))
moved_comps <- yCoords[comps[ord], 4] * runif(sum(comps))
# Figure 3: Event of interest
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime3.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
polygon(c(0, 0, ftime[ord], max(ftime), 0),
c(0, nobs, yCoords[,4], 0, 0),
col = "grey90")
points((ftime[ord])[cases[ord]], yCoords[cases[ord],4], pch = 19,
col = "firebrick3", cex = 0.5)
legend("topright", legend = c("Relapse"),
col = c("firebrick3", "dodgerblue2", "black"),
pch = 19)
dev.off()
# Figure 4: Event of interest - shuffled
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime4.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
polygon(c(0, 0, ftime[ord], max(ftime), 0),
c(0, nobs, yCoords[,4], 0, 0),
col = "grey90")
points((ftime[ord])[cases[ord]], moved_cases, pch = 19,
col = "firebrick3", cex = 0.5)
legend("topright", legend = c("Relapse"),
col = c("firebrick3", "dodgerblue2", "black"),
pch = 19)
dev.off()
# Figure 4: Competing event
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime5.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
polygon(c(0, 0, ftime[ord], max(ftime), 0),
c(0, nobs, yCoords[,4], 0, 0),
col = "grey90")
points((ftime[ord])[cases[ord]], moved_cases, pch = 19,
col = "firebrick3", cex = 0.5)
points((ftime[ord])[comps[ord]], moved_comps, pch = 19,
col = "dodgerblue2", cex = 0.5)
legend("topright", legend = c("Relapse", "Competing event"),
col = c("firebrick3", "dodgerblue2", "black"),
pch = 19)
dev.off()
sampleData <- sampleCaseBase(bmtcrr, time = "ftime", event = "Status",
ratio = 1, comprisk = TRUE)
bseries_yc <- runif(sum(sampleData$Status == 0)) * (nobs - sapply(1:sum(sampleData$Status == 0),
function(i) {
pmax(max(which(ftime[ord] < sampleData$ftime[sampleData$Status == 0][i])),
0)
}))
# Figure 5: Base series
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime6.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
polygon(c(0, 0, ftime[ord], max(ftime), 0),
c(0, nobs, yCoords[,4], 0, 0),
col = "grey90")
points((ftime[ord])[cases[ord]], moved_cases, pch = 19,
col = "firebrick3", cex = 0.5)
points((ftime[ord])[comps[ord]], moved_comps, pch = 19,
col = "dodgerblue2", cex = 0.5)
points(sampleData$ftime[sampleData$Status == 0],
bseries_yc, pch = 19,
col = "black", cex = 0.5)
legend("topright", legend = c("Relapse", "Competing event", "Base series"),
col = c("firebrick3", "dodgerblue2", "black"),
pch = 19)
dev.off()
# Absolute risks----
library(tidyverse)
library(magrittr)
library(splines)
library(survival)
library(timereg)
bmtcrr %<>% filter(Age >= 16)
bmtcrr %>% select(Sex) %>% table
bmtcrr %>% select(D) %>% table
bmtcrr %>% select(Phase) %>% table
bmtcrr %>% select(Source) %>% table
bmtcrr %>% select(Status) %>% table
model_cb <- fitSmoothHazard(Status ~ bs(ftime, df = 5) + Sex + D + Phase + Source + Age,
data = bmtcrr, time = "ftime")
model_fg <- comp.risk(Event(ftime, Status) ~ const(Sex) + const(D) +
const(Phase) + const(Source) + const(Age),
data = bmtcrr, cause = 1, model = "fg")
model_cox <- coxph(Surv(ftime, Status == 1) ~ Sex + D + Phase + Source + Age,
data = bmtcrr)
time_points <- (0:100)*60/100
# ALL vs. AML
newdata <- data.frame("Sex" = factor(c("F", "F"),
levels = c("F", "M")),
"D" = c("ALL", "AML"),
"Phase" = factor(c("Relapse", "Relapse"),
levels = c("CR1", "CR2", "CR3", "Relapse")),
"Age" = c(35, 35),
"Source" = factor(c("PB", "PB"),
levels = c("BM+PB", "PB")))
risk_cb <- absoluteRisk(object = model_cb, time = time_points,
method = "montecarlo", newdata = newdata)
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,2], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,3], Disease = "AML",
stringsAsFactors = FALSE))
risk_fg <- predict(model_fg, newdata, times = time_points)
risk_fg <- bind_rows(data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[1,], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[2,], Disease = "AML",
stringsAsFactors = FALSE))
risk_km <- map_df(c("ALL", "AML"), function(disease) {
foo <- bmtcrr %>%
filter(D == disease) %>%
survfit(Surv(ftime,Status == 1) ~ 1, data = .)
data.frame(Time = foo$time, Method = "Kaplan-Meier", Risk = 1 - foo$surv, Disease = disease,
stringsAsFactors = FALSE) %>%
filter(Time <= 60)
})
disease_names <- c("ALL" = "Acute Lymphoid Leukemia",
"AML" = "Acute Myeloid Leukemia")
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
ggsave("absolute_risk2.pdf", p)
# Table of coefficients----
z_value <- qnorm(0.975)
table_cb <- summary(model_cb)@coef3[seq(13, 25, by = 2), 1:2]
table_cb <- cbind(table_cb[,1],
table_cb[,1] - z_value * table_cb[,2],
table_cb[,1] + z_value * table_cb[,2])
table_cb <- round(exp(table_cb), 2)
table_cox <- round(summary(model_cox)$conf.int[,-2], 2)
model_cb
risk_cb <- absoluteRisk(object = model_cb, time = time_points,
method = "montecarlo", newdata = newdata)
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,,2], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,,3], Disease = "AML",
stringsAsFactors = FALSE))
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,,2], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,3,], Disease = "AML",
stringsAsFactors = FALSE))
risk_fg <- predict(model_fg, newdata, times = time_points)
risk_fg <- bind_rows(data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[1,], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[2,], Disease = "AML",
stringsAsFactors = FALSE))
risk_km <- map_df(c("ALL", "AML"), function(disease) {
foo <- bmtcrr %>%
filter(D == disease) %>%
survfit(Surv(ftime,Status == 1) ~ 1, data = .)
data.frame(Time = foo$time, Method = "Kaplan-Meier", Risk = 1 - foo$surv, Disease = disease,
stringsAsFactors = FALSE) %>%
filter(Time <= 60)
})
disease_names <- c("ALL" = "Acute Lymphoid Leukemia",
"AML" = "Acute Myeloid Leukemia")
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
ggsave("absolute_risk.pdf", p)
risk_cb <- absoluteRisk(object = model_cb, time = time_points,
method = "montecarlo", newdata = newdata)
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
View(newdata)
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,2], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,3], Disease = "AML",
stringsAsFactors = FALSE))
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[2,,], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[3,,], Disease = "AML",
stringsAsFactors = FALSE))
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,2,], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,3,], Disease = "AML",
stringsAsFactors = FALSE))
disease_names <- c("ALL" = "Acute Lymphoid Leukemia",
"AML" = "Acute Myeloid Leukemia")
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
ggsave("absolute_risk.pdf", p)
View(risk_cb)
risk_cb %>%
bind_rows(risk_fg,
risk_km)
risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk)
risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base"))
risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
scale_y_continuous(limits=c(0,80))+
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,100)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
ggsave("absolute_risk.pdf", p)
a=risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk)
View(a)
aes(Time, Risk, colour = Method)
ggplot(aes(Time, Risk, colour = Method))
ggplot(aes(Time, Risk, colour = Method),data=a)
View(a)
risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = "red"))
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base"))
risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = "red")) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base"))
View(a)
View(risk_cb)
risk_cb$Risk=risk_cb$Risk.event.1
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
ggsave("absolute_risk.pdf", p)
risk_cb$Risk=risk_cb$Risk.event.2
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
setwd("~/github/UseR--CaseBase-Presentation")
getPckg <- function(pckg) install.packages(pckg, repos = "http://cran.r-project.org")
## ---- required-packages ----
getPckg <- function(pckg) install.packages(pckg, repos = "http://cran.r-project.org")
pckg = try(require(knitr))
if(!pckg) {
cat("Installing 'knitr' from CRAN\n")
getPckg("knitr")
require(knitr)
}
pckg = try(require(ISLR))
if(!pckg) {
cat("Installing 'ISLR' from CRAN\n")
getPckg("ISLR")
require(ISLR)
}
pckg = try(require(data.table))
if(!pckg) {
cat("Installing 'data.table' from CRAN\n")
getPckg("data.table")
require(data.table)
}
pckg = try(require(party))
if(!pckg) {
cat("Installing 'party' from CRAN\n")
getPckg("party")
require(party)
}
pckg = try(require(randomForest))
if(!pckg) {
cat("Installing 'randomForest' from CRAN\n")
getPckg("randomForest")
require(randomForest)
}
pckg = try(require(rpart))
if(!pckg) {
cat("Installing 'rpart' from CRAN\n")
getPckg("rpart")
require(rpart)
}
pckg = try(require(rpart.plot))
if(!pckg) {
cat("Installing 'rpart.plot' from CRAN\n")
getPckg("rpart.plot")
require(rpart.plot)
}
pckg = try(require(ggplot2))
if(!pckg) {
cat("Installing 'ggplot2' from CRAN\n")
getPckg("ggplot2")
require(ggplot2)
}
pckg = try(require(knitcitations))
if(!pckg) {
cat("Installing 'knitcitations' from CRAN\n")
getPckg("knitcitations")
require(knitcitations)
}
pckg = try(require(devtools))
if(!pckg) {
cat("Installing 'devtools' from CRAN\n")
getPckg("devtools")
require(devtools)
}
pckg = try(require(DT))
if(!pckg) {
cat("Installing 'DT' from Github\n")
devtools::install_github('rstudio/DT')
require(DT)
}
install.packages(c("bayestestR", "emmeans", "evaluate", "markdown", "mime", "numDeriv", "openssl", "performance", "sjlabelled", "sjmisc", "sjstats"))
install.packages("tibble")
install.packages("tibble")
install.packages("sjmisc")
options(tinytex.verbose = TRUE)
install.packages('tinytex')
library(survival)
library(casebase)
library(data.table)
ERSPC?
ERSPC?
sd
?ERSPC
install.packages("flextable")
install.packages("officer")
install.packages("magrittr")
table2 <- flextable( head(iris, n = 10 )) %>% autofit()
library(casebase)
library(officer)
install.packages("officer")
cleanbib()
unlink('ioslidesuseR_cache', recursive = TRUE)
