model_cb <- fitSmoothHazard(Status ~ log(ftime) + Sex + D + Phase + Source + Age,
data = bmtcrr, time = "ftime")
model_fg <- comp.risk(Event(ftime, Status) ~ const(Sex) + const(D) +
const(Phase) + const(Source) + const(Age),
data = bmtcrr, cause = 1, model = "fg")
time_points <- (0:100)*60/100
risk_cb <- absoluteRisk(object = model_cb, time = time_points, method = "montecarlo", newdata = newdata)
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,2], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,3], Disease = "AML",
stringsAsFactors = FALSE))
risk_fg <- predict(model_fg, newdata, times = time_points)
risk_fg <- bind_rows(data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[1,], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[2,], Disease = "AML",
stringsAsFactors = FALSE))
risk_km <- map_df(c("ALL", "AML"), function(disease) {
foo <- bmtcrr %>%
filter(D == disease) %>%
survfit(Surv(ftime,Status == 1) ~ 1, data = .)
data.frame(Time = foo$time, Method = "Kaplan-Meier", Risk = 1 - foo$surv, Disease = disease,
stringsAsFactors = FALSE) %>%
filter(Time <= 60)
})
disease_names <- c("ALL" = "Acute Lymphoid Leukemia",
"AML" = "Acute Myeloid Leukemia")
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
p
newdata <- data.frame("Sex" = factor(c("F", "F"),
levels = c("F", "M")),
"D" = c("ALL", "AML"),
"Phase" = factor(c("Relapse", "Relapse"),
levels = c("CR1", "CR2", "CR3", "Relapse")),
"Age" = c(35, 35),
"Source" = factor(c("PB", "PB"),
levels = c("BM+PB", "PB")))
model_cb <- fitSmoothHazard(Status ~ ftime + Sex + D + Phase + Source + Age,
data = bmtcrr, time = "ftime")
model_fg <- comp.risk(Event(ftime, Status) ~ const(Sex) + const(D) +
const(Phase) + const(Source) + const(Age),
data = bmtcrr, cause = 1, model = "fg")
time_points <- (0:100)*60/100
risk_cb <- absoluteRisk(object = model_cb, time = time_points, method = "montecarlo", newdata = newdata)
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,2], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,3], Disease = "AML",
stringsAsFactors = FALSE))
risk_fg <- predict(model_fg, newdata, times = time_points)
risk_fg <- bind_rows(data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[1,], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[2,], Disease = "AML",
stringsAsFactors = FALSE))
risk_km <- map_df(c("ALL", "AML"), function(disease) {
foo <- bmtcrr %>%
filter(D == disease) %>%
survfit(Surv(ftime,Status == 1) ~ 1, data = .)
data.frame(Time = foo$time, Method = "Kaplan-Meier", Risk = 1 - foo$surv, Disease = disease,
stringsAsFactors = FALSE) %>%
filter(Time <= 60)
})
disease_names <- c("ALL" = "Acute Lymphoid Leukemia",
"AML" = "Acute Myeloid Leukemia")
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
p
p
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method),size=2) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
p
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base"),size=2) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
p
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base"),size=2) +
geom_step(data = . %>% filter(Method != "Case-base"),size=2) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
p
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base"),size=2) +
geom_step(data = . %>% filter(Method != "Case-base"),size=1.5) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
p
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_step(data = . %>% filter(Method != "Case-base"),size=1.5) +
geom_line(data = . %>% filter(Method == "Case-base"),size=2) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
p
warnings()
?ERSPC
repSample<-c(3,1682,40176,146154,159814)
repSample<-casebase::ERSPC[repSample,]
View(repSample)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(dev = 'pdf')
pID=c(1,2,3,4,5)
repSample=cbind(pID,repSample)
View(repSample)
patientID=c(1,2,3,4,5)
repSample<-c(3,1682,40176,146154,159814)
repSample<-casebase::ERSPC[repSample,]
repSample=cbind(pID,repSample)
knitr::kable(repSample,row.names = FALSE)
head(casebase::ERSPC)
summary(wModel)
wModel<-fitSmoothHazard(DeadOfPrCa ~
log(Follow.Up.Time) +
ScrArm, data=ERSPC, ratio = 100)
wModel<-casebase::fitSmoothHazard(DeadOfPrCa ~
log(Follow.Up.Time) +
ScrArm, data=casebase::ERSPC, ratio = 100)
summary(wModel)
summary(wModel)
ERSPC$ScrArm<-factor(ERSPC$ScrArm)
data(casebase::ERSPC)
ERSPC=casebase::ERSPC
ERSPC$ScrArm<-factor(ERSPC$ScrArm)
gModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ Follow.Up.Time + ScrArm, data=ERSPC, ratio = 100)
eModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ ScrArm, data=ERSPC, ratio = 100)
wModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ log(Follow.Up.Time)
+ ScrArm, data=ERSPC, ratio = 100)
sModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ bs(Follow.Up.Time) + ScrArm, data=ERSPC, ratio = 100)
library(splines)
ERSPC$ScrArm<-factor(ERSPC$ScrArm)
gModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ Follow.Up.Time + ScrArm, data=ERSPC, ratio = 100)
eModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ ScrArm, data=ERSPC, ratio = 100)
wModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ log(Follow.Up.Time)
+ ScrArm, data=ERSPC, ratio = 100)
sModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ bs(Follow.Up.Time) + ScrArm, data=ERSPC, ratio = 100)
coxModel<-coxph(Surv(Follow.Up.Time,DeadOfPrCa ) ~ ScrArm, data=ERSPC)
library(survival)
ERSPC$ScrArm<-factor(ERSPC$ScrArm)
gModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ Follow.Up.Time + ScrArm, data=ERSPC, ratio = 100)
eModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ ScrArm, data=ERSPC, ratio = 100)
wModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ log(Follow.Up.Time)
+ ScrArm, data=ERSPC, ratio = 100)
sModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ bs(Follow.Up.Time) + ScrArm, data=ERSPC, ratio = 100)
coxModel<-coxph(Surv(Follow.Up.Time,DeadOfPrCa ) ~ ScrArm, data=ERSPC)
compareHazard=as.data.frame(cbind(coxModel$coefficients, gModel$coefficients[3] ,eModel$coefficients[2],wModel$coefficients[3],sModel$coefficients[5]))
colnames(compareHazard)=c("Cox","Gompertz","Exponential","Weibull","Splines")
knitr::kable(compareHazard,row.names = FALSE)
summary(coxModel)
compareHazard1=as.data.frame(rbind(coxModel$coefficients, gModel$coefficients[3] ,eModel$coefficients[2],wModel$coefficients[3],sModel$coefficients[5]))
colnames(compareHazard)=c("ScrArm1","lower .95","upper .95")
coxModel$coefficients
coxModel$var
coxModel$score
coxModel$residuals
coxModel$formula
coxModel$means
coxModel$method
coxModel$wald.test
coxModel$xlevels
coxModel$contrasts
summary(coxModel)
coxModel$var
coxModel$score
coxModel$iter
coxModel$linear.predictors
a=summary(coxModel)
a$coefficients
summary(coxModel)$coefficients[4]
summary(coxModel)$coefficients[3]
summary(gModel)$coefficients
summary(gModel)$coefficients[3,3]
summary(gModel)$coefficients[2,3]
summary(gModel)$coefficients[3,2]
summary(eModel)$coefficients
summary(eModel)$coefficients[2,2]
summary(wModel)$coefficients
summary(wModel)$coefficients[3,2]
summary(sModel)$coefficients
summary(sModel)$coefficients[4,2]
summary(sModel)$coefficients[5,2]
ERSPC$ScrArm<-factor(ERSPC$ScrArm)
gModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ Follow.Up.Time + ScrArm, data=ERSPC, ratio = 100)
eModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ ScrArm, data=ERSPC, ratio = 100)
wModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ log(Follow.Up.Time)
+ ScrArm, data=ERSPC, ratio = 100)
sModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ bs(Follow.Up.Time) + ScrArm, data=ERSPC, ratio = 100)
coxModel<-coxph(Surv(Follow.Up.Time,DeadOfPrCa ) ~ ScrArm, data=ERSPC)
compareHazard1=as.data.frame(cbind(coxModel$coefficients, gModel$coefficients[3] ,eModel$coefficients[2],wModel$coefficients[3],sModel$coefficients[5]))
summary(coxModel$coefficients)
compareHazard1=as.data.frame(rbind(coxModel$coefficients, gModel$coefficients[3] ,eModel$coefficients[2], wModel$coefficients[3], sModel$coefficients[5]))
compareHazard2=as.data.frame(rbind(summary(coxModel)$coefficients[3], summary(gModel)$coefficients[3,2],summary(eModel)$coefficients[2,2], summary(wModel)$coefficients[3,2], summary(sModel)$coefficients[5,2]))
names=c("Cox","Gompertz","Exponential","Weibull","Splines")
compareHazard=cbind(names,compareHazard1,compareHazard2)
colnames(compareHazard)=c("ScrArm1 Est.","Std. Error")
knitr::kable(compareHazard,row.names = FALSE)
colnames(compareHazard)=c('Model',"ScrArm1 Est.","Std. Error")
knitr::kable(compareHazard,row.names = FALSE)
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
a=round_df(compareHazard,3)
a=round_df(compareHazard$`ScrArm1 Est.`,3)
compareHazard1=round_df(compareHazard1,3)
compareHazard2=round_df(compareHazard2,3)
names=c("Cox","Gompertz","Exponential","Weibull","Splines")
compareHazard=cbind(names,compareHazard1,compareHazard2)
colnames(compareHazard)=c('Model',"ScrArm1 Est.","Std. Error")
knitr::kable(compareHazard,row.names = FALSE)
summary(coxModel)
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
ERSPC$ScrArm<-factor(ERSPC$ScrArm)
gModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ Follow.Up.Time + ScrArm, data=ERSPC, ratio = 100)
eModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ ScrArm, data=ERSPC, ratio = 100)
wModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ log(Follow.Up.Time)
+ ScrArm, data=ERSPC, ratio = 100)
sModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ bs(Follow.Up.Time) + ScrArm, data=ERSPC, ratio = 100)
coxModel<-coxph(Surv(Follow.Up.Time,DeadOfPrCa ) ~ ScrArm, data=ERSPC)
compareHazard1=as.data.frame(cbind(coxModel$coefficients, gModel$coefficients[3] ,eModel$coefficients[2],wModel$coefficients[3],sModel$coefficients[5]))
compareHazard1=as.data.frame(rbind(coxModel$coefficients, gModel$coefficients[3] ,eModel$coefficients[2], wModel$coefficients[3], sModel$coefficients[5]))
compareHazard2=as.data.frame(rbind(summary(coxModel)$coefficients[3], summary(gModel)$coefficients[3,2],summary(eModel)$coefficients[2,2], summary(wModel)$coefficients[3,2], summary(sModel)$coefficients[5,2]))
compareHazard1=round_df(compareHazard1,3)
compareHazard2=round_df(compareHazard2,3)
names=c("Cox","Gompertz","Exponential","Weibull","Splines")
compareHazard=cbind(names,compareHazard1,compareHazard2)
colnames(compareHazard)=c('Model',"Hazard Ratio \n ScrArm1 \n Est.","Std.Error")
knitr::kable(compareHazard,row.names = FALSE)
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
ERSPC$ScrArm<-factor(ERSPC$ScrArm)
gModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ Follow.Up.Time + ScrArm, data=ERSPC, ratio = 100)
eModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ ScrArm, data=ERSPC, ratio = 100)
wModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ log(Follow.Up.Time)
+ ScrArm, data=ERSPC, ratio = 100)
sModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ bs(Follow.Up.Time) + ScrArm, data=ERSPC, ratio = 100)
coxModel<-coxph(Surv(Follow.Up.Time,DeadOfPrCa ) ~ ScrArm, data=ERSPC)
compareHazard1=as.data.frame(cbind(coxModel$coefficients, gModel$coefficients[3] ,eModel$coefficients[2],wModel$coefficients[3],sModel$coefficients[5]))
compareHazard1=as.data.frame(rbind(coxModel$coefficients, gModel$coefficients[3] ,eModel$coefficients[2], wModel$coefficients[3], sModel$coefficients[5]))
compareHazard2=as.data.frame(rbind(summary(coxModel)$coefficients[3], summary(gModel)$coefficients[3,2],summary(eModel)$coefficients[2,2], summary(wModel)$coefficients[3,2], summary(sModel)$coefficients[5,2]))
compareHazard1=round_df(compareHazard1,3)
compareHazard2=round_df(compareHazard2,3)
names=c("Cox","Gompertz","Exponential","Weibull","Splines")
compareHazard=cbind(names,compareHazard1,compareHazard2)
colnames(compareHazard)=c('Model',"Hazard Ratio ScrArm1 Est.","Std.Error")
knitr::kable(compareHazard,row.names = FALSE)
round_df <- function(x, digits) {
# round all numeric variables
# x: data frame
# digits: number of digits to round
numeric_columns <- sapply(x, mode) == 'numeric'
x[numeric_columns] <-  round(x[numeric_columns], digits)
x
}
ERSPC$ScrArm<-factor(ERSPC$ScrArm)
gModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ Follow.Up.Time + ScrArm, data=ERSPC, ratio = 100)
eModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ ScrArm, data=ERSPC, ratio = 100)
wModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ log(Follow.Up.Time)
+ ScrArm, data=ERSPC, ratio = 100)
sModel <- casebase::fitSmoothHazard(DeadOfPrCa ~ bs(Follow.Up.Time) + ScrArm, data=ERSPC, ratio = 100)
coxModel<-coxph(Surv(Follow.Up.Time,DeadOfPrCa ) ~ ScrArm, data=ERSPC)
compareHazard1=as.data.frame(cbind(coxModel$coefficients, gModel$coefficients[3] ,eModel$coefficients[2],wModel$coefficients[3],sModel$coefficients[5]))
compareHazard1=as.data.frame(rbind(coxModel$coefficients, gModel$coefficients[3] ,eModel$coefficients[2], wModel$coefficients[3], sModel$coefficients[5]))
compareHazard2=as.data.frame(rbind(summary(coxModel)$coefficients[3], summary(gModel)$coefficients[3,2],summary(eModel)$coefficients[2,2], summary(wModel)$coefficients[3,2], summary(sModel)$coefficients[5,2]))
compareHazard1=round_df(compareHazard1,3)
compareHazard2=round_df(compareHazard2,3)
names=c("Cox","Gompertz","Exponential","Weibull","Splines")
compareHazard=cbind(names,compareHazard1,compareHazard2)
colnames(compareHazard)=c('Model',"HRSE","Std.Error")
knitr::kable(compareHazard,row.names = FALSE)
?bmtcrr
sample=head(casebase::bmtcrr,4)
sample=sample[,c("D","Status","ftime")]
knitr::kable(head(sample),row.names = FALSE)
summary(wModel)
library(casebase)
data("bmtcrr")
# Population-time plots----
nobs <- nrow(bmtcrr)
ftime <- bmtcrr$ftime
ord <- order(ftime, decreasing = FALSE)
yCoords <- cbind(cumsum(bmtcrr[ord, "Status"] == 2),
cumsum(bmtcrr[ord, "Status"] == 1),
cumsum(bmtcrr[ord, "Status"] == 0))
yCoords <- cbind(yCoords, nobs - rowSums(yCoords))
aspectRatio <- 0.75
height <- 8.5 * aspectRatio; width <- 11 * aspectRatio
# Figure 1: blank
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime1.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
dev.off()
# Figure 2: Experience
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime2.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
polygon(c(0, 0, ftime[ord], max(ftime), 0),
c(0, nobs, yCoords[,4], 0, 0),
col = "grey90")
dev.off()
cases <- bmtcrr[, "Status"] == 1
comps <- bmtcrr[, "Status"] == 2
# randomly move the cases vertically
moved_cases <- yCoords[cases[ord], 4] * runif(sum(cases))
moved_comps <- yCoords[comps[ord], 4] * runif(sum(comps))
# Figure 3: Event of interest
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime3.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
polygon(c(0, 0, ftime[ord], max(ftime), 0),
c(0, nobs, yCoords[,4], 0, 0),
col = "grey90")
points((ftime[ord])[cases[ord]], yCoords[cases[ord],4], pch = 19,
col = "firebrick3", cex = 0.5)
legend("topright", legend = c("Relapse"),
col = c("firebrick3", "dodgerblue2", "black"),
pch = 19)
dev.off()
# Figure 4: Event of interest - shuffled
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime4.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
polygon(c(0, 0, ftime[ord], max(ftime), 0),
c(0, nobs, yCoords[,4], 0, 0),
col = "grey90")
points((ftime[ord])[cases[ord]], moved_cases, pch = 19,
col = "firebrick3", cex = 0.5)
legend("topright", legend = c("Relapse"),
col = c("firebrick3", "dodgerblue2", "black"),
pch = 19)
dev.off()
# Figure 4: Competing event
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime5.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
polygon(c(0, 0, ftime[ord], max(ftime), 0),
c(0, nobs, yCoords[,4], 0, 0),
col = "grey90")
points((ftime[ord])[cases[ord]], moved_cases, pch = 19,
col = "firebrick3", cex = 0.5)
points((ftime[ord])[comps[ord]], moved_comps, pch = 19,
col = "dodgerblue2", cex = 0.5)
legend("topright", legend = c("Relapse", "Competing event"),
col = c("firebrick3", "dodgerblue2", "black"),
pch = 19)
dev.off()
sampleData <- sampleCaseBase(bmtcrr, time = "ftime", event = "Status",
ratio = 1, comprisk = TRUE)
bseries_yc <- runif(sum(sampleData$Status == 0)) * (nobs - sapply(1:sum(sampleData$Status == 0),
function(i) {
pmax(max(which(ftime[ord] < sampleData$ftime[sampleData$Status == 0][i])),
0)
}))
# Figure 5: Base series
pdf("~/Documents/BiostatsPhD/Talks/StudentConf2017/poptime6.pdf",
width, height)
plot(0, type = 'n', xlim = c(0, max(ftime)), ylim = c(0, nobs),
xlab = 'Follow-up time (months)', ylab = 'Population')
polygon(c(0, 0, ftime[ord], max(ftime), 0),
c(0, nobs, yCoords[,4], 0, 0),
col = "grey90")
points((ftime[ord])[cases[ord]], moved_cases, pch = 19,
col = "firebrick3", cex = 0.5)
points((ftime[ord])[comps[ord]], moved_comps, pch = 19,
col = "dodgerblue2", cex = 0.5)
points(sampleData$ftime[sampleData$Status == 0],
bseries_yc, pch = 19,
col = "black", cex = 0.5)
legend("topright", legend = c("Relapse", "Competing event", "Base series"),
col = c("firebrick3", "dodgerblue2", "black"),
pch = 19)
dev.off()
# Absolute risks----
library(tidyverse)
library(magrittr)
library(splines)
library(survival)
library(timereg)
bmtcrr %<>% filter(Age >= 16)
bmtcrr %>% select(Sex) %>% table
bmtcrr %>% select(D) %>% table
bmtcrr %>% select(Phase) %>% table
bmtcrr %>% select(Source) %>% table
bmtcrr %>% select(Status) %>% table
model_cb <- fitSmoothHazard(Status ~ bs(ftime, df = 5) + Sex + D + Phase + Source + Age,
data = bmtcrr, time = "ftime")
model_fg <- comp.risk(Event(ftime, Status) ~ const(Sex) + const(D) +
const(Phase) + const(Source) + const(Age),
data = bmtcrr, cause = 1, model = "fg")
model_cox <- coxph(Surv(ftime, Status == 1) ~ Sex + D + Phase + Source + Age,
data = bmtcrr)
time_points <- (0:100)*60/100
# ALL vs. AML
newdata <- data.frame("Sex" = factor(c("F", "F"),
levels = c("F", "M")),
"D" = c("ALL", "AML"),
"Phase" = factor(c("Relapse", "Relapse"),
levels = c("CR1", "CR2", "CR3", "Relapse")),
"Age" = c(35, 35),
"Source" = factor(c("PB", "PB"),
levels = c("BM+PB", "PB")))
risk_cb <- absoluteRisk(object = model_cb, time = time_points,
method = "montecarlo", newdata = newdata)
risk_cb <- bind_rows(data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,2], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Case-base", Risk = risk_cb[,3], Disease = "AML",
stringsAsFactors = FALSE))
risk_fg <- predict(model_fg, newdata, times = time_points)
risk_fg <- bind_rows(data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[1,], Disease = "ALL",
stringsAsFactors = FALSE),
data.frame(Time = time_points, Method = "Fine-Gray", Risk = risk_fg$P1[2,], Disease = "AML",
stringsAsFactors = FALSE))
risk_km <- map_df(c("ALL", "AML"), function(disease) {
foo <- bmtcrr %>%
filter(D == disease) %>%
survfit(Surv(ftime,Status == 1) ~ 1, data = .)
data.frame(Time = foo$time, Method = "Kaplan-Meier", Risk = 1 - foo$surv, Disease = disease,
stringsAsFactors = FALSE) %>%
filter(Time <= 60)
})
disease_names <- c("ALL" = "Acute Lymphoid Leukemia",
"AML" = "Acute Myeloid Leukemia")
p <- risk_cb %>%
bind_rows(risk_fg,
risk_km) %>%
arrange(Disease, Risk) %>%
ggplot(aes(Time, Risk, colour = Method)) +
geom_line(data = . %>% filter(Method == "Case-base")) +
geom_step(data = . %>% filter(Method != "Case-base")) +
facet_grid(Disease ~ ., labeller = as_labeller(disease_names)) + ylim(c(0,1)) + theme(legend.position = "top") +
xlab("Time (in Months)") + ylab("Relapse risk")
ggsave("absolute_risk2.pdf", p)
# Table of coefficients----
z_value <- qnorm(0.975)
table_cb <- summary(model_cb)@coef3[seq(13, 25, by = 2), 1:2]
table_cb <- cbind(table_cb[,1],
table_cb[,1] - z_value * table_cb[,2],
table_cb[,1] + z_value * table_cb[,2])
table_cb <- round(exp(table_cb), 2)
table_cox <- round(summary(model_cox)$conf.int[,-2], 2)
model_cb
summary(model_cb)
summary(model_cb)@coef3[seq(13, 25, by = 2), 1:2]
table_cb <- cbind(table_cb[,1],
table_cb[,1] - z_value * table_cb[,2],
table_cb[,1] + z_value * table_cb[,2])
table_cb <- summary(model_cb)@coef3[seq(13, 25, by = 2), 1:2]
table_cb <- cbind(table_cb[,1],
table_cb[,1] - z_value * table_cb[,2],
table_cb[,1] + z_value * table_cb[,2])
table_cb <- round(exp(table_cb), 2)
repSample=cbind(PatientID,repSample)
repSample$Follow.Up.Time=round(repSample$Follow.Up.Time,3)
knitr::kable(repSample,row.names = FALSE)
